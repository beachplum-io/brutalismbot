StartAt: GetSlack
States:
  GetSlack:
    Type: Task
    Resource: arn:aws:states:::dynamodb:getItem
    Next: GetRequest
    ResultPath: $.SLACK
    ResultSelector:
      ACCESS_TOKEN.$: $.Item.ACCESS_TOKEN.S
      CHANNEL_ID.$: $.Item.CHANNEL_ID.S
      USER_ID.$: $.Item.USER_ID.S
    Parameters:
      TableName: ${table_name}
      ProjectionExpression: ACCESS_TOKEN,CHANNEL_ID,USER_ID
      Key:
        GUID:
          S: ${app_id}/${team_id}/${conversation_id}
        SORT:
          S: SLACK/AUTH
  GetRequest:
    Type: Pass
    Next: SendRequest
    Parameters:
      method: POST
      url: https://slack.com/api/chat.postMessage
      headers:
        authorization.$: States.Format('Bearer {}', $.SLACK.ACCESS_TOKEN)
        content-type: application/json; charset=utf-8
      body:
        channel.$: $.SLACK.USER_ID
        text.$: States.Format('State machine {}', $.detail.status)
        blocks:
          - type: section
            text:
              type: plain_text
              text.$: States.Format('State machine {}', $.detail.status)
          - type: context
            elements:
              - type: plain_text
                emoji: false
                text.$: $.detail.stateMachineArn
          - type: actions
            elements:
              - type: button
                action_id: open_execution
                value.$: $.detail.executionArn
                url.$: States.Format('https://{}.console.aws.amazon.com/states/home?region={}#/v2/executions/details/{}', $.region, $.region, $.detail.executionArn)
                text:
                  type: plain_text
                  text: Open
  SendRequest:
    Type: Task
    Resource: ${http_function_arn}
    End: true
    Parameters:
      method.$: $.method
      url.$: $.url
      headers.$: $.headers
      body.$: $.body
