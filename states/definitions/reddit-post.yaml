---
StartAt: Extract
States:
  Extract:
    Type: Parallel
    Next: Transform
    ResultSelector:
      MAX_CREATED_UTC.$: $[0]
      POST.$: $[1]
    Branches:
      - StartAt: GetMaxCreatedUTC
        States:
          GetMaxCreatedUTC:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:getItem
            End: true
            OutputPath: $.Item.CREATED_UTC.S
            Parameters:
              TableName: ${table_name}
              ProjectionExpression: CREATED_UTC
              Key:
                GUID:
                  S: STATS/MAX
                SORT:
                  S: REDDIT/POST
      - StartAt: PutItem
        States:
          PutItem:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:putItem
            End: true
            InputPath: $.POST
            ResultPath: $.DYNAMODB
            OutputPath: $.POST
            Parameters:
              TableName: ${table_name}
              Item:
                SORT:
                  S: REDDIT/POST
                GUID:
                  S.$: $.NAME
                CREATED_UTC:
                  S.$: $.CREATED_UTC
                JSON:
                  S.$: $.DATA
                NAME:
                  S.$: $.NAME
                PERMALINK:
                  S.$: $.PERMALINK
                STATE:
                  S: IN_REVIEW
                TITLE:
                  S.$: $.TITLE
                TTL:
                  N.$: States.JsonToString($.TTL)
  Transform:
    Type: Parallel
    Next: Wait
    ResultSelector:
      Update:
        TableName: ${table_name}
        UpdateExpression: "SET #STATE = :STATE"
        ExpressionAttributeNames:
          "#STATE": STATE
        ExpressionAttributeValues:
          ":STATE":
            S: POSTED
        Key:
          GUID:
            S.$: $[0].NAME
          SORT:
            S: REDDIT/POST
      Entries:
        - EventBusName: ${event_bus_name}
          Source: reddit
          DetailType: post/slack
          Detail:
            AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
            POST.$: $[0]
        - EventBusName: ${event_bus_name}
          Source: reddit
          DetailType: post/twitter
          Detail:
            AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
            POST.$: $[1]
    Branches:
      - StartAt: GetSlack
        States:
          GetSlack:
            Type: Task
            Resource: ${slack_transform_function_arn}
            Next: SendScreener
            InputPath: $.POST.DATA
            ResultPath: $.POST.DATA
            OutputPath: $.POST
            Retry:
              - BackoffRate: 2
                IntervalSeconds: 3
                MaxAttempts: 4
                ErrorEquals:
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.ServiceException
                  - Lambda.Unknown
          SendScreener:
            Type: Task
            Resource: arn:aws:states:::events:putEvents
            End: true
            ResultPath: $.VALIDATION
            Parameters:
              Entries:
                - EventBusName: ${event_bus_name}
                  Source: reddit
                  DetailType: post/slack/screen
                  Detail:
                    AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
                    POST.$: $
      - StartAt: GetTwitter
        States:
          GetTwitter:
            Type: Task
            Resource: ${twitter_transform_function_arn}
            End: true
            InputPath: $.POST.DATA
            ResultPath: $.POST.DATA
            OutputPath: $.POST
            Retry:
              - BackoffRate: 2
                IntervalSeconds: 3
                MaxAttempts: 4
                ErrorEquals:
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.ServiceException
                  - Lambda.Unknown
      - StartAt: NewMaxCreatedUTC?
        States:
          NewMaxCreatedUTC?:
            Type: Choice
            Default: Finish
            Choices:
              - Next: UpdateMaxCreatedUTC
                Variable: $.MAX_CREATED_UTC
                StringLessThanPath: $.POST.CREATED_UTC
          Finish:
            Type: Succeed
          UpdateMaxCreatedUTC:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:updateItem
            End: true
            InputPath: $.POST
            Parameters:
              TableName: ${table_name}
              UpdateExpression: >-
                SET CREATED_UTC = :CREATED_UTC, #NAME = :NAME
              ExpressionAttributeNames:
                "#NAME": NAME
              ExpressionAttributeValues:
                ":CREATED_UTC":
                  S.$: $.CREATED_UTC
                ":NAME":
                  S.$: $.NAME
              Key:
                GUID:
                  S: STATS/MAX
                SORT:
                  S: REDDIT/POST
  Wait:
    Type: Wait
    Seconds: ${wait_time_seconds}
    Next: Load
  Load:
    Type: Parallel
    End: true
    Branches:
      - StartAt: MarkScreened
        States:
          MarkScreened:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:updateItem
            End: true
            InputPath: $.Update
            Parameters:
              TableName.$: $.TableName
              UpdateExpression.$: $.UpdateExpression
              ExpressionAttributeNames.$: $.ExpressionAttributeNames
              ExpressionAttributeValues.$: $.ExpressionAttributeValues
              Key.$: $.Key
      - StartAt: PutEvents
        States:
          PutEvents:
            Type: Task
            Resource: arn:aws:states:::events:putEvents
            End: true
            Parameters:
              Entries.$: $.Entries
